/**
 * @license
 * Copyright © 2017 ∑(O_O；).
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

'use strict';

(function() {

  // Used to map keys to internationalized messages.
  var dictionary = Object.create(null, {
    // HTTP status
    '200': { value: '处理成功。', enumerable: true },
    '201': { value: '数据已创建成功。', enumerable: true },
    '202': { value: '正在处理，请稍候。', enumerable: true },
    '400': { value: '请求无效，请检查输入的数据是否正确。', enumerable: true },
    '401': { value: '权限不足。', enumerable: true },
    '404': { value: '没有找到符合条件的数据。', enumerable: true },
    '409': { value: '数据已被他人修改。', enumerable: true },
    '415': { value: '请求无效', enumerable: true },
    '422': { value: '请求无效，请检查输入的数据是否正确。', enumerable: true },
    '423': { value: '账户已被锁定。', enumerable: true },
    '500': { value: '处理失败。', enumerable: true },
    '503': { value: '服务器当前正忙，无法处理请求。', enumerable: true },
    // system
    'S001': { value: '下一页', enumerable: true },
    'S002': { value: '上一页', enumerable: true },
    'S003': { value: '表中没有可用的数据', enumerable: true },
    'S004': { value: '第 _START_ - _END_ 条记录（共 _TOTAL_ 条记录）', enumerable: true },
    'S005': { value: '显示 0 条记录', enumerable: true },
    'S006': { value: '（从 _MAX_ 条记录中过滤）', enumerable: true },
    'S007': { value: '显示 _MENU_ 条记录', enumerable: true },
    'S008': { value: '正在读取……', enumerable: true },
    'S009': { value: '输入姓名按回车键检索', enumerable: true },
    'S010': { value: '未匹配到符合条件的记录', enumerable: true },
    'S011': { value: '处理成功。', enumerable: true },
    'S012': { value: '处理存在风险。', enumerable: true },
    'S013': { value: '处理失败。', enumerable: true },
    'S014': { value: '远程通信失败。', enumerable: true },
    'S015': { value: '操作确认', enumerable: true },
    'S016': { value: '确定要执行此项操作吗？', enumerable: true },
    'S017': { value: '确认', enumerable: true },
    'S018': { value: '取消', enumerable: true },
    'S019': { value: '有 {0} 条可用结果，请使用上下箭头进行导航', enumerable: true },
    'S020': { value: '未匹配到符合条件的记录', enumerable: true },
    'S021': { value: '请输入 {0} 个或更多字符', enumerable: true },
    'S022': { value: '请删除 {0} 个字符', enumerable: true },
    'S023': { value: '您仅能选择 {0} 个选项', enumerable: true },
    'S024': { value: '正在读取更多结果……', enumerable: true },
    'S025': { value: '正在查询……', enumerable: true },
    'S026': { value: '已上传', enumerable: true },
    // information
    'I001': { value: '处理成功。', enumerable: true },
    'I002': { value: '保存成功。', enumerable: true },
    'I003': { value: '删除成功。', enumerable: true },
    // warning
    'W001': { value: '确定要执行{0}操作吗？', enumerable: true },
    'W002': { value: '你确定要复制[{0}]到[{1}]的[{2}]的汇率到下12个月吗？', enumerable: true },
    // error
    'E001': { value: '处理失败。', enumerable: true },
    'E002': { value: '文件解析失败', enumerable: true },
    'E003': { value: '第{0}行', enumerable: true },
  });

  /**
   * A method that fetches internationalized messages via the specified key.
   * 
   * @author Hujun Fan
   * @since 1.0.0
   * @method
   * @memberof Springfield
   * @param {String} key The specified key.
   * @param {...*} replacements A string or a sequence of strings for replacing the internationalized messages.
   * @returns {String} Returns the internationalized message to which the specified key is mapped, or `null` if no
   *                   mapping found for the key.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments
   * @example
   * 
   * _.getMessage('S016')
   * // => '确定要执行此项操作吗？'
   * 
   * _.getMessage('S019', 5)
   * // => '有 5 条可用结果，请使用上下箭头进行导航'
   */
  function getMessage(key, replacements) {
    var message = dictionary[key];
    if (message == null) {
      return null;
    }

    if (arguments.length > 1) {
      var args = Array.apply(null, arguments);
      args.shift();
      args.forEach(function(arg, index) {
        message = message.replace(new RegExp('\\{' + index + '\\}', 'g'), arg);
      });
    }
    return message;
  }

  /**
   * A detection method that checks if the environment is fit for Springfield.
   * 
   * @author ∑(O_O；)
   * @since 1.0.0
   * @method
   */
  function detectEnvironment() {
    if (typeof springfield === 'undefined'
        || Object.prototype.toString.call(springfield) !== '[object Object]') {
      throw new ReferenceError('Springfield is required.');
    }
  }

  /**
   * A library that provides i18n support for Springfield.
   * 
   * @author Hujun Fan
   * @since 1.0.0
   * @method
   * @borrows getMessage as Springfield.prototype.getMessage
   */
  function extendSpringfield() {
    Object.defineProperties(springfield.fn, {
      'getMessage': { value: getMessage, configurable: true, enumerable: true, writable: true },
    });
  }

  detectEnvironment();
  extendSpringfield();
})();
